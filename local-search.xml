<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>动画基础期末project</title>
    <link href="/uncategorized/animation-final/"/>
    <url>/uncategorized/animation-final/</url>
    
    <content type="html"><![CDATA[<p>终于结课了。。两分创艺课的workload几乎和45分主课差不多，超绝的长度、大量的画面，永远不会的人体，已知道他们是作业中的极品了总之在绝赞赶稿之后总算是结束了，特此纪念</p><iframe src="https://player.bilibili.com/player.html?bvid=BV1re3yemEtw&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="500px"></iframe>]]></content>
    
    
    
    <tags>
      
      <tag>assignment</tag>
      
      <tag>animation</tag>
      
      <tag>drawing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GPT-4v 上传本地图片报错解决方案</title>
    <link href="/uncategorized/gpt4v-local-image-problem/"/>
    <url>/uncategorized/gpt4v-local-image-problem/</url>
    
    <content type="html"><![CDATA[<h1id="gpt-4v-上传本地图片报错解决方案-fail-to-decode-image-configwebp">GPT-4v上传本地图片报错解决方案 "fail to decode image config(webp)"</h1><h4 id="问题描述">问题描述</h4><p>如题，博主在使用OpenAIapi调用gpt-4-vision-preview时出现如下报错信息：<code>'error': &#123;'message': 'fail to decode image config(webp): riff: missing RIFF chunk header (request id: xxxxxxx)', 'type': 'new_api_error', 'param': '', 'code': 'count_token_messages_failed'&#125;</code></p><p>经排查发现问题是因为上传的图片格式(bmp)不支持。目前OpenAI支持的图片格式有：<code>JPEG</code>,<code>JPG</code>, <code>PNG</code>, <code>WEBP</code>,(非动图的)<code>GIF</code>。</p><h4 id="解决方案">解决方案</h4><p>要向GPT api上传本地图片，需要使用base64先进行编码，参考<ahref="https://platform.openai.com/docs/guides/vision/uploading-base-64-encoded-images">openaidocument</a>如果本地图片格式不在支持范围内，需要先进行转化，修改后的encode代码如下：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> BytesIO<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">encode_image</span>(<span class="hljs-params">image_path</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;convert image to jpeg and encode with base64&quot;&quot;&quot;</span><br>    img = Image.<span class="hljs-built_in">open</span>(image_path).convert(<span class="hljs-string">&quot;RGB&quot;</span>)<br>    im_file = BytesIO()<br>    img.save(im_file, <span class="hljs-built_in">format</span>=<span class="hljs-string">&quot;JPEG&quot;</span>)<br>    im_bytes = im_file.getvalue()  <span class="hljs-comment"># im_bytes: image in binary format.</span><br>    <span class="hljs-keyword">return</span> base64.b64encode(im_bytes).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br></code></pre></td></tr></table></figure> 然后按文档传入<code>image_url</code>中对应位置即可。</p><p>示例： <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs python">base64_image = encode_image(image_filename)<br>response = client.chat.completions.create(<br>    model=<span class="hljs-string">&quot;gpt-4-vision-preview&quot;</span>,<br>    messages=[<br>        &#123;<br>        <span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>,<br>        <span class="hljs-string">&quot;content&quot;</span>: [<br>            &#123;<span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;text&quot;</span>, <span class="hljs-string">&quot;text&quot;</span>: text&#125;,<br>            &#123;<span class="hljs-string">&quot;type&quot;</span>: <span class="hljs-string">&quot;image_url&quot;</span>,<br>            <span class="hljs-string">&quot;image_url&quot;</span>: &#123;<span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">f&quot;data:image/jpeg;base64,<span class="hljs-subst">&#123;base64_image&#125;</span>&quot;</span>,<br>                            <span class="hljs-string">&quot;detail&quot;</span>: <span class="hljs-string">&quot;low&quot;</span>&#125;,<br>            &#125;<br>        ],<br>        &#125;<br>    ],<br>    max_tokens=<span class="hljs-number">300</span><br>)<br>answer = response.choices[<span class="hljs-number">0</span>].message.content<br></code></pre></td></tr></table></figure></p><p>以上。</p>]]></content>
    
    
    
    <tags>
      
      <tag>GPT-4v</tag>
      
      <tag>api error</tag>
      
      <tag>fail to decode image config</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>llava-embedding</title>
    <link href="/report/llava-embedding/"/>
    <url>/report/llava-embedding/</url>
    
    <content type="html"><![CDATA[<!-- slide --><h2 id="本周完成事项">本周完成事项</h2><ul><li>初步了解了llava的组成部分和代码结构<ul><li>在服务器部署了llava-1.5-7b-hf</li><li>拆分出embedding部分</li></ul></li><li>初步测试 malicious text &amp; benign text v.s. adversarialimage(熊猫) 的 cosine similarity<ul><li>文本部分采用在MMLU和harmbench各40个text input</li><li>发现两者表现出一定的差异(如下图)</li></ul></li></ul><p><img src="analysis2.png" alt="embeddings" /> <imgsrc="different-pic-result.png" alt="analysis" />左图：直方图展示两类text与img-16的cosine similarity分布;以及类别内均值和标准差 右图：展示 两类文本v.s.五张图片的cosinesimilarity；其中红线表达两者<strong>均值之差</strong>的变化趋势</p><!-- slide --><h2 id="下周计划">下周计划</h2><ul><li>部署denoiser</li><li>分析denoise后图像与text的cosine similarity变化情况</li></ul>]]></content>
    
    
    <categories>
      
      <category>report</category>
      
    </categories>
    
    
    <tags>
      
      <tag>report</tag>
      
      <tag>ASPIRE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CS274A-Language Model</title>
    <link href="/note/CS274A/CS274A/Language-Model/"/>
    <url>/note/CS274A/CS274A/Language-Model/</url>
    
    <content type="html"><![CDATA[<h1 id="language-model">Language Model</h1><p>相对于分类、生成等任务中将语言看作 <strong>词的集合或向量</strong>，语言模型中将文本作为 <strong>词的序列</strong></p><p>通过估计条件概率进行预测</p><ul><li>n-gram: 只考虑前面n个单词的影响（作为概率的条件）</li><li>RNN</li><li>Transformer：将一些上文需要关注的单词作为条件（注意力机制）</li><li>？</li></ul><h3 id="lm的特殊处理">LM的特殊处理</h3><h5 id="unknown-word">unknown word</h5><p>构建token <code>&lt;UNK&gt;</code>,</p><ol type="1"><li>构建词表</li><li>检索训练文本中不在词表中的词<ol type="1"><li>较多的词添加到词表</li><li>较少的词换成<code>&lt;UNK&gt;</code></li></ol></li><li>正常训练</li></ol><p>也可以从字符/sub word 层面构建语言模型，避免生词出现</p><h3 id="lm的评估">LM的评估</h3><p>Extrinsic: 针对下游任务，同前</p><p>Intrinsic:</p><h4 id="perplexity">Perplexity</h4><p>困惑度：LM应该对没见过的真实句子给出较高的分数</p><p>For test data <span class="math inline">\(\bar x_{1:m}\)</span> (msentences):</p><p>average log-probability per word of <span class="math inline">\(\barx_{1:m}\)</span> is <span class="math display">\[l=-\frac1M\sum_{i=1}^m\log_2p(\bar x_i)\]</span> if <span class="math inline">\(M=\sum_{i=1}^m|\barx_i|\)</span></p><p>perplexity= <span class="math inline">\(2^l\)</span></p><blockquote><p>在信息论中表达了编码所需的最小bit数</p></blockquote><p>即希望用尽量少的词得到概率尽量大的一系列词（来对信息进行编码）</p><p>例</p><ul><li>如果训练数据概率为1，困惑度=1</li><li>如果=0，困惑度=<span class="math inline">\(\infty\)</span></li></ul><p>==注意==: 困惑度受词表影响</p><hr /><h2 id="n-gram-model">N-gram Model</h2><p>如果n=1，为Unigram model，即每个单词相互独立</p><p>用MLE，概率=序列出现次数/序列前n出现次数</p><p>问题：数据稀疏</p><p>利用平滑</p><h4 id="back-off">Back-off</h4><p>如果当前n-gram的效果不好，那么就用n+1gram</p><h4 id="interpolation">Interpolation</h4><p>线性插值</p><p>将不同n值的n-gram分别估算概率然后加权平均</p><h3 id="生成式">生成式</h3><p>Auto-aggressive generate</p><p>语法通顺但语义不行(incoherent)。</p><blockquote><p>fixed-window neural LM</p><p>n-gram的神经网络实现：将词向量连接后过线性变换和激活函数</p><p>用神经网络记住参数，不用对所有组合记录概率</p><p>同时由于同类词语可能具有类似的embedding，泛化能力更好（神经网络是平滑的，类似的输入带来类似的输出）</p></blockquote><h2 id="rnn">RNN</h2><p>每一个时刻的新隐向量都根据上一个时刻的隐向量和新的wordembedding得到</p><h4 id="学习">学习</h4><p>MLE</p><p>计算真实分布<span class="math inline">\(y^{(t)}\)</span>和 <spanclass="math inline">\(\hat y^{(t)}\)</span>的cross entropy作为loss（真实分布是one-hot的）</p><p>等同于最大化所有位置正确单词的概率</p><p><strong>问题</strong>：梯度消失/梯度爆炸</p><p>梯度爆炸导致更新步长过大；解决方案：gradientclipping：梯度大于阈值时设置为上限值</p><h3 id="lstm">LSTM</h3><h2 id="attention">Attention</h2><p>对每一个state相对于当前state计算一个attentionscore，用其值做加权平均得到一个综合的新state，包含更多需要注意的state</p><h4 id="masking">masking</h4><p>对于将来的词（不应该被看到），将attention score设为<spanclass="math inline">\(-\infty\)</span></p><h3 id="multi-head-attention">Multi-head attention</h3><p>将key-value-query 线性映射到不同空间，得到多种注意力</p><p>对过长的输入也只关心一定长度内的历史</p><h3 id="在transformer上的attention">在Transformer上的attention</h3><p>利用positioning embedding保留词的位置信息；</p><ul><li>问题：词的含义可能与位置无关；长度外推性（不能处理没见过的绝对长度）</li></ul><p><strong>相对位置编码</strong>：即两个词之间的长度，有上界k</p><p>加在key和value上</p><h5 id="rope">RoPE</h5><p>旋转位置编码</p><p>对于多层的self-attention网络，多次线性变换其实可以用一次线性变换代替，因此没有意义</p><p>所以引入非线性：在每层做完 attention 后过两层神经网络(feed-forward)</p><blockquote><p>一般是先升维再降维（4倍）</p></blockquote><blockquote><p>Feed-forward层也可以被解释为某种全局的attention/ global memory</p></blockquote><p><strong>残差connection</strong></p><p>提供跨国多层保留信息的渠道，函数更平衡</p><p><span class="math inline">\(x_{n+1}=F(x)+x\)</span></p><p><strong>Layer Normalization</strong></p><p>算完self-attention/feed forward后进行标准化，避免前面层输出变化影响后面已经训练好的参数</p><h4 id="complexity">Complexity</h4><p><span class="math inline">\((QK^T)V\)</span> -&gt; <spanclass="math inline">\(O(T^2d_k)\)</span></p><ol type="1"><li>sparse attention:只关注开头和最近的部分token</li><li>Linear attention: 去掉（用核函数近似）softmax后 用交换律达到 <spanclass="math inline">\(O(Td_k^2)\)</span></li></ol>]]></content>
    
    
    <categories>
      
      <category>note</category>
      
      <category>CS274A</category>
      
    </categories>
    
    
    <tags>
      
      <tag>note NLP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>潜水员戴夫，堂堂完结！</title>
    <link href="/uncategorized/dave-the-diver/"/>
    <url>/uncategorized/dave-the-diver/</url>
    
    <content type="html"><![CDATA[<h1 id="潜水员戴夫堂堂完结">潜水员戴夫，堂堂完结！</h1><p><img src="20240313215442_1.jpg" alt="完结撒花" />感觉好久没有认真的通关一款游戏了，所以最近花了25.6h把他通关了（绝对不是因为太上头）。整体而言游玩体验不错，<del>除了后期操作重复赶路慢还有各种有病的拖时间操作以外</del>，</p><p>画风清新正反馈很好开店也很爽（妹子也很好看）还有各种吃的，总之就是把好东西都给你了，开发商能有什么坏心思呢？他只是想让你玩得高兴（还有赚钱）而已。</p><p>反正流程不长，玩了不亏<del>更何况我是白嫖的</del>。</p><p><em>P.S.最后的小彩蛋还挺有意思的，就像寿司里的青芥末激发出了游戏通关的喜悦</em><img src="20240313213504_1.jpg" alt="我在海底打车万.jpg" /></p><p><em>P.P.S今天刚在群里看完东方的meme，晚上就打上了，你有什么头猪吗</em></p><blockquote><p><strong>碎碎念</strong>希望这款游戏能开个好头，恢复花时间体会好作品的兴趣和能力作为新博客发的第一篇帖，还挺有纪念意义的w之后有时间的话希望能继续更游戏、gal、番、书的完结贴吧，咕 以上</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>game</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/uncategorized/hello-world/"/>
    <url>/uncategorized/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your veryfirst post. Check <a href="https://hexo.io/docs/">documentation</a> formore info. If you get any problems when using Hexo, you can find theanswer in <ahref="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> oryou can ask me on <ahref="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <ahref="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>gallery</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<!doctype html><!-- <div style="position: relative; padding: 30% 45%;">    <iframe     style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"     src="https://player.bilibili.com/player.html?aid=1152932500&bvid=BV1YZ421e7BB&cid=1499097259&p=0&as_wide=1"     scrolling="no"     border="0"    frameborder="no"     framespacing="0"     allowfullscreen="true"     autoplay="0"    muted="1"    > </iframe></div> --><html lang="en">  <head>    <meta charset="UTF-8"name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no">    <title>好得不能再好了！泰拉投资大师课</title>        <style type="text/css">      *{        margin:0px;        padding:0px;      }      .button { /*开场对话*/        background-color: #303030 ;        border: 3px solid;        color: white;        width: 80%;        height: 45px;        text-align: center;        text-decoration: none;        display: inline-block;        font-size: 18px;      }      .button:active {/*按钮按下效果*/        animation-name: buttonPress;        animation-duration: 0.4s;      }      @keyframes buttonPress {        from {background-color: #303030;}        to {background-color: #505050;}      }      #invite { /* 来自坎诺特的邀请弹窗 */        position: fixed;        top: 50%;        left: 50%;        transform: translate(-50%, -50%);        z-index: 999;        background-color: gray;        padding: 20px;        border-radius: 10px;        width: 90%;        text-align: center;      }      #ad{          position:fixed;/*相对于浏览器窗口进行绝对定位*/          top:40%;        left:50%;        transform:translate(-50%,-40%);          z-index: 980;      }      #ad #post{          /* width:20%;  海报宽度 */         /* height:15%; */      }      #ad #close{       height:20px;        background-color: rgba(255,255,255,0.5);      }      #ad #close img{      float:right;/*关闭键close_img右浮*/      }      #side-ad {        position: fixed;        top: 20%;        left: 0;        transform: translateY(-50%);        z-index: 990;      }      #side-ad img {        width: 276px;        height: 112px;      }      #bottom-ad {        position: fixed;        bottom: 0;        left: 0;        z-index: 990;        width: 100%;        height: 17%;      }      #bottom-ad img {        width: 100%;        height: 100%;        object-fit: fill;      }      /* allow video over main picture */      #parentDiv{           position:relative;      }      #parentDiv img{          width:100%;      }      #video_window{        position:absolute;/*所有的子层都是绝对定位*/        top:0;        left:0;        right:0;        bottom:0;      }      #video_window iframe{        position:absolute;        top: 21.67%;        z-index:2;        left:4.16%;        translate: translateX(-4.155%);      }      #VS_button{        position:absolute;        top: 0;        z-index:800;        left:0;        /* translate: translateX(-4.155%); */      }      #VS_button img{        width: 100%;        height: 100%;      }      #ball {        width:30%;        border-radius: 50%;        position:absolute;        left:0;        top:200px;        z-index: 990;      }      #ball img{        width:100%;        height:auto;      }      .divbtn{        position: absolute;        width: 91.69%;        height: 22.58%;        top: 21.67%;        left:4.16%;        translate: translateX(-4.155%);        z-index: 900;      }    </style>  </head>  <body overflow="hidden">    <!-- 来自坎诺特的邀请 -->    <dialog open id="invite">      <p>你收到了一封来自坎诺特的邀请函，是否接受？</p>      <br>      <form method="dialog">        <button class="button">让我再想想。</button><br><br>        <button class="button">我决定了！</button><br><br>        <button class="button">......</button>        <!-- 按下按钮后延迟关闭 -->        <script type="text/javascript">          var buttons = document.getElementsByClassName("button");          for (var i = 0; i < buttons.length; i++) {            buttons[i].onclick = function() {              toggleSound(); //播放bgm              setTimeout(function() {                document.getElementById("invite").close();              }, 500);            }          }        </script>      </form>    </dialog>        <!-- 播放ALL!!! -->    <audio id="ALL">        <source src="/audio/ALL!.mp3" type="audio/mpeg">      您的浏览器不支持 audio 元素。    </audio>    <!-- 自动播放 -->    <script type="text/javascript">        function toggleSound() {                    var music = document.getElementById("ALL");//获取ID                                              if (music.paused) { //判读是否播放                          music.paused=false;                        music.play(); //没有就播放                     }                }    </script>        <!-- ad中包含【海报】和【关闭键】两部分 -->    <div id="ad">      <!-- 海报 -->      <div id="post">        <img src="/img/amiya_ad2.jpg" width="70%"/>      </div>      <!-- 关闭键 -->      <div id="close">        <img id="close_img" src="/img/close.png" width="15px" height="15px" />      </div>          </div><!-- 左侧悬浮框 --><div id="side-ad"><img src="/img/small_pic.png" alt="left ad"></div>  <script>   function play_video(){    if (navigator.userAgent.indexOf("Firefox")>0 &&       typeof window.orientation !== 'undefined'){ // 判断是否为手机火狐浏览器      // 弹出提示框      alert("火狐用户请使用桌面版网站以获得最佳体验")    }    //删除divbtn和VS_button    document.getElementsByClassName("divbtn")[0].style.display = "none";    document.getElementById("VS_button").style.display = "none";    document.getElementById("ALL").pause();    // 点击按钮后新增iframe播放视频    var para = document.createElement("iframe");    para.id = "video_window iframe";    para.src = "https://player.bilibili.com/player.html?aid=1152932500&bvid=BV1YZ421e7BB&cid=1499097259&p=0&t=0&as_wide=1&autoplay=1&muted=0";    para.scrolling = "no";    para.border = "0";    para.frameborder = "no";    para.framespacing = "0";    para.width = "91.69%";    para.height = "22.58%";    document.getElementById("video_window").appendChild(para);   }  </script>  <!-- 主页面 -->  <div id="parentDiv" width="100%">    <img src="/img/long_page.jpg" alt="poster">    <!-- 加入图片作为按钮播放视频 -->    <div id="VS_button">      <img src="/img/VS.png" alt="完事！开打！">    </div>    <!-- 添加闪烁效果 -->    <script>      var VS_button = document.getElementById("VS_button");      var img = VS_button.getElementsByTagName("img")[0];      var flag = 0;      setInterval(function() {        if (flag == 0) {          img.style.opacity = 0;          flag = 1;        } else {          img.style.opacity = 1;          flag = 0;        }      }, 488);    </script>    <!-- 视频播放窗口 -->    <div id="video_window">      <!-- 点击窗口范围播放视频 -->      <div class="divbtn" onclick="play_video()"></div>      <!-- iframe video will be added after pressing button -->    </div>  </div>  <!-- 页面底部警告信息 --><img src="/img/LGD.png" width="100%" alt="LGD warning">  <!-- white space -->  <div style="height: 200px;"></div>  <!-- 底部面板 -->  <div id="bottom-ad">    <img src="/img/bottom_pic.png" alt="bottom ad">  </div>  <!-- 添加反弹图片 -->  <div id="ball">    <img src="/img/海猫投资大师课.png" alt="海猫投资大师课">  </div>  <!-- 图片反弹 -->  <script>    // 获取dom对象    var $ball = document.querySelector('#ball');    //  设置速度    var topSpeed = 3;    var leftSpeed = 3;    //  设置定时器    setInterval(function () {        //  获取小球最大移动的宽,高        var maxTop = document.documentElement.clientHeight - $ball.offsetHeight;        var maxLeft = document.documentElement.clientWidth - $ball.offsetWidth;        //  小球超出可视区让其速度取反        if ($ball.offsetTop < 0 || $ball.offsetTop > maxTop) {            topSpeed *= -1;        } else if ($ball.offsetLeft < 0 || $ball.offsetLeft > maxLeft) {            leftSpeed *= -1;        }        //  通过改变小球的left,top属性使其运动        $ball.style.left = $ball.offsetLeft + leftSpeed + "px";        $ball.style.top = $ball.offsetTop - topSpeed + "px";    }, 20)  </script>  <!-- 点击图片播放音频 -->  <script>    var ball = document.getElementById("ball");    ball.onclick = function(){      // 静音其他      document.getElementById("ALL").pause();      // 播放音频      var audio = document.createElement("audio");      var audios = ["/audio/dame1.mp3", "/audio/hkpmsdhkp.mp3", "/audio/touhou.mp3"];      var audiolen = [13000, 3500, 4000];      //随机选择音频      var index = Math.floor(Math.random() * audios.length);      audio.src = audios[index];      audio.autoplay = true;      document.body.appendChild(audio);      // 播放完毕后移除音频      audio.onended = function(){        document.body.removeChild(audio);      }      //播放其他      setTimeout(function(){        document.getElementById("ALL").play();      }, audiolen[index]);    }  </script>  </body>  <script type="text/javascript">    var close = document.getElementById("close");    var post = document.getElementById("post");    var ad = document.getElementById("ad");    //关闭广告    close.onclick = function(){      ad.style.display = "none";    }    post.onclick = function(){      ad.style.display = "none";    }  </script></html>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[$("#btn").click(function(){    $("#video_window").css("display","flex")     $("#video_window").append(        <iframe id="video_window iframe"      src="https://player.bilibili.com/player.html?aid=1152932500&bvid=BV1YZ421e7BB&cid=1499097259&p=0&t=0      &as_wide=1&autoplay=0&muted=0"       scrolling="no"       border="0"      frameborder="no"       framespacing="0"       allowfullscreen="true"       autoplay=0      muted=0      width="91.69%"      height="22.58%"      > </iframe>) })]]></content>
    
  </entry>
  
  
  
</search>
